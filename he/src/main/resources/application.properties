server.port = 8080
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
devtools.livereload.enabled=true
spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true

#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC

spring.datasource.username=coffee
spring.datasource.password=1234

#mysql
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC

mybatis.type-aliases-package=com.sint.he.test.vo
mybatis.mapper-locations=mybatis/**/*.xml


logging.level.root=info
logging.level.com.sint.he.test=info
logging.level.com.sint.he.test.controller=debug

#JPA 설정 #Dialect 설정 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect 
#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다. 
spring.jpa.properties.hibernate.show_sql=true 
#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다. 
spring.jpa.properties.hibernate.format_sql=true 
#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다. 
spring.jpa.properties.hibernate.use_sql_comments=true

